- hosts: servers
  vars:
    master: 172.69.69.10
    node1: 172.69.69.11
    node2: 172.69.69.12
    rangeMetallb: 172.69.69.1-172.69.69.50
  gather_facts: no
  tasks:

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /root
      state: directory
      mode: '0755'
      
  - name: Copy config kube_config.sh file with owner and permissions
    ansible.builtin.template:
      src: /var/www/ansible/g6k466c74l/configs/-root-kube_configsh
      dest: /root/kube_config.sh
      owner: 
      group: 
      mode: ''
      follow: no

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /root/helm-values
      state: directory
      mode: '0755'
      
  - name: Copy config kube-prometheus-stack-values.yaml file with owner and permissions
    ansible.builtin.template:
      src: /var/www/ansible/g6k466c74l/configs/-root-helm-values-kube-prometheus-stack-valuesyaml
      dest: /root/helm-values/kube-prometheus-stack-values.yaml
      owner: 
      group: 
      mode: ''
      follow: no

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /root/helm-values
      state: directory
      mode: '0755'
      
  - name: Copy config metallb-values.yaml file with owner and permissions
    ansible.builtin.template:
      src: /var/www/ansible/g6k466c74l/configs/-root-helm-values-metallb-valuesyaml
      dest: /root/helm-values/metallb-values.yaml
      owner: 
      group: 
      mode: ''
      follow: no

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /root/helm-values
      state: directory
      mode: '0755'
      
  - name: Copy config rook-operator-values.yaml file with owner and permissions
    ansible.builtin.template:
      src: /var/www/ansible/g6k466c74l/configs/-root-helm-values-rook-operator-valuesyaml
      dest: /root/helm-values/rook-operator-values.yaml
      owner: 
      group: 
      mode: ''
      follow: no
  
  - name: Install packages
    dnf:
      name:
        - epel-release
        - htop
        - bash-completion
        - vim
        - iproute-tc
        - wget
        - tar
        - rsyslog
        - open-vm-tools
        - chrony
        - git
      state: latest
  - name: Load overlay module
    community.general.modprobe:
      name: overlay
      state: present
  - name: Load netfilter module
    community.general.modprobe:
      name: br_netfilter
      state: present
  - name: Let iptables see bridged traffic
    sysctl:
      name: "{{ item }}"
      value: "1"
      state: present
    loop:
      - net.bridge.bridge-nf-call-iptables
      - net.bridge.bridge-nf-call-ip6tables
      - net.ipv4.ip_forward
  - name: Stop and disable firewalld
    systemd:
      name: firewalld
      state: stopped
      enabled: false
  - name: Add Docker Repo
    shell: >
      dnf config-manager --add-repo
      https://download.docker.com/linux/centos/docker-ce.repo
  - name: Install docker
    ansible.builtin.dnf:
      name:
        - containerd.io
      state: installed
  - name: remove config.tml containerd
    shell: |
      rm -rf /etc/containerd/config.toml   
  - name: Enable containerd
    ansible.builtin.systemd:
      name: containerd
      state: started
      enabled: true
  - name: Kubernetes Repos
    ansible.builtin.copy:
      dest: /etc/yum.repos.d/kubernetes.repo
      mode: "0644"
      content: |
        [kubernetes]
        name=Kubernetes
        baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
        enabled=1
        gpgcheck=1
        gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
        exclude=kubelet kubeadm kubectl
  - name: Install kubernetes
    ansible.builtin.dnf:
      name:
        - kubelet
        - kubeadm
        - kubectl
      state: installed
      disable_excludes: kubernetes
    notify: Restart Kubelet
  - name: Enable Kubelet
    ansible.builtin.systemd:
      name: kubelet
      state: started
      enabled: true
  - name: Kubeadm init
    command: kubeadm init --pod-network-cidr=172.31.0.0/17 --service-cidr=172.31.128.0/17
    when: inventory_hostname in master
  - name: Pause for 1 minutes to build app cache
    ansible.builtin.pause:
      minutes: 1
  - name: Config directory
    shell: >
      mkdir -p mkdir -p $HOME/.kube && sudo cp -i /etc/kubernetes/admin.conf
      $HOME/.kube/config && chown $(id -u):$(id -g) $HOME/.kube/config 
    when: inventory_hostname in master
  - name: taint node
    shell: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
    when: inventory_hostname in master
  - name: Download Helm
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      dest: /tmp/getHelm.sh
      mode: "0700"
  - name: Execute getHelm script
    shell: sh /tmp/getHelm.sh
  - name: Ansible Simple Variable Example Usage
    debug:
      msg: "{{ master }}, Let's learn Ansible variables"
  - name: Generate join token
    shell: kubeadm token create --print-join-command
    register: kubeadm_join_cmd
    delegate_to: "{{ master }}"
  - set_fact:
      kubeadm_join: "{{ kubeadm_join_cmd.stdout }}"
  - debug: var=kubeadm_join
  - name: Store join command
    action: copy content="{{ kubeadm_join }}" dest="/etc/kubernetes/kubeadm-join.command"
    when: inventory_hostname not in master
  - name: Run kubeadm join
    shell: "{{ kubeadm_join }} --ignore-preflight-errors=swap"
    when: inventory_hostname not in master
    
  - name: Changing perm of "kube_config.sh", adding "+x"
    file: dest=/root/kube_config.sh mode=a+x
    
  - name: Run a script kubeConfig
    shell: 'sh -x  /root/kube_config.sh {{ rangeMetallb }}'
    register: cmd
    when: inventory_hostname in master
  
  - debug:
      msg: "{{ cmd.stdout }}"
